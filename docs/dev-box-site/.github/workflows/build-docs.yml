name: Build and Deploy Documentation

on:
  push:
    branches: [main, develop]
    paths:
      - "docs/dev-box-site/**"
      - ".github/workflows/build-docs.yml"
  pull_request:
    branches: [main]
    paths:
      - "docs/dev-box-site/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docs/dev-box-site

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: docs/dev-box-site/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build documentation site
        run: npm run build:incremental

      - name: Verify build output
        run: |
          ls -la _site/
          test -f _site/index.html
          test -f _site/getting-started/index.html
          test -f _site/guides/index.html
          test -f _site/api/index.html
          test -f _site/troubleshooting/index.html

      - name: Check for broken links (basic)
        run: |
          # Simple check for broken internal links
          grep -r "href=\"/[^\"]*\"" _site/ | while read -r line; do
            file=$(echo "$line" | cut -d: -f1)
            link=$(echo "$line" | grep -o 'href="[^"]*"' | sed 's/href="//; s/"//')
            if [[ $link == /* ]]; then
              target="_site${link}"
              if [[ $link == */ ]]; then
                target="${target}index.html"
              fi
              if [[ ! -f "$target" ]]; then
                echo "Broken link found in $file: $link -> $target"
                exit 1
              fi
            fi
          done

      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: documentation-site
          path: docs/dev-box-site/_site/
          retention-days: 30

      - name: Deploy to GitHub Pages (main branch only)
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/dev-box-site/_site
          destination_dir: docs
          cname: dev-box-docs.github.io

  lighthouse:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: ./docs/dev-box-site

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: docs/dev-box-site/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build site for lighthouse
        run: npm run build

      - name: Serve site for lighthouse
        run: |
          npx http-server _site -p 8080 &
          sleep 5

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          configPath: "./docs/dev-box-site/.lighthouserc.json"
          temporaryPublicStorage: true

  accessibility:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./docs/dev-box-site

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: docs/dev-box-site/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build site
        run: npm run build

      - name: Install accessibility tools
        run: npm install -g @axe-core/cli pa11y-ci

      - name: Run accessibility tests
        run: |
          # Test key pages for accessibility
          pa11y-ci --sitemap http://localhost:8080/sitemap.xml || true
          axe _site/index.html _site/getting-started/index.html _site/guides/index.html

  performance:
    runs-on: ubuntu-latest
    needs: build
    defaults:
      run:
        working-directory: ./docs/dev-box-site

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: documentation-site
          path: docs/dev-box-site/_site/

      - name: Analyze bundle size
        run: |
          # Check total size
          total_size=$(du -sh _site/ | cut -f1)
          echo "Total site size: $total_size"

          # Check individual asset sizes
          find _site -name "*.css" -exec du -h {} \; | sort -hr
          find _site -name "*.js" -exec du -h {} \; | sort -hr
          find _site -name "*.html" -exec du -h {} \; | sort -hr | head -10

          # Fail if site is too large (> 50MB)
          size_bytes=$(du -s _site/ | cut -f1)
          if [ $size_bytes -gt 51200 ]; then
            echo "Site size exceeds 50MB limit"
            exit 1
          fi

      - name: Performance budget check
        run: |
          # Check critical CSS size
          css_size=$(find _site -name "main.css" -exec du -k {} \; | cut -f1)
          if [ $css_size -gt 50 ]; then
            echo "CSS size exceeds 50KB budget"
            exit 1
          fi

          # Check JavaScript size
          js_size=$(find _site -name "*.js" -exec du -k {} \; | awk '{sum+=$1} END {print sum}')
          if [ $js_size -gt 100 ]; then
            echo "JavaScript size exceeds 100KB budget"
            exit 1
          fi
