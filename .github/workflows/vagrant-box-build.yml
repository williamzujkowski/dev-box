name: Build and Test Vagrant Libvirt Box

on:
  push:
    branches: [main]
    paths:
      - "packer/**"
      - "Vagrantfile"
      - ".github/workflows/vagrant-box-build.yml"
  pull_request:
    branches: [main]
    paths:
      - "packer/**"
      - "Vagrantfile"
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      upload_box:
        description: "Upload box as artifact"
        required: false
        default: "false"
        type: boolean

permissions:
  contents: read
  actions: write

jobs:
  build-libvirt-box:
    runs-on: ubuntu-24.04
    timeout-minutes: 90

    strategy:
      matrix:
        arch: [amd64]
        # Note: ARM64 builds require self-hosted runners with ARM processors

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup KVM and libvirt
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            qemu-kvm \
            libvirt-daemon-system \
            libvirt-clients \
            virtinst \
            bridge-utils \
            cpu-checker \
            libguestfs-tools \
            libosinfo-bin \
            python3-libvirt

          # Enable and start libvirt
          sudo systemctl enable libvirtd
          sudo systemctl start libvirtd

          # Add user to libvirt group
          sudo usermod -a -G libvirt $USER

          # Check KVM support
          sudo kvm-ok || echo "KVM not available - using qemu emulation"

      - name: Install Packer
        run: |
          curl -fsSL https://releases.hashicorp.com/packer/1.10.0/packer_1.10.0_linux_${{ matrix.arch }}.zip -o packer.zip
          sudo unzip packer.zip -d /usr/local/bin/
          sudo chmod +x /usr/local/bin/packer
          packer version

      - name: Install Vagrant
        run: |
          curl -fsSL https://releases.hashicorp.com/vagrant/2.4.1/vagrant_2.4.1-1_${{ matrix.arch }}.deb -o vagrant.deb
          sudo dpkg -i vagrant.deb
          vagrant version

      - name: Install vagrant-libvirt plugin
        run: |
          sudo apt-get install -y \
            ruby-dev \
            libvirt-dev \
            libxml2-dev \
            libxslt-dev \
            libssl-dev \
            pkg-config
          vagrant plugin install vagrant-libvirt

      - name: Validate Packer configuration
        working-directory: packer
        run: |
          packer init ubuntu-24.04-libvirt.pkr.hcl
          packer validate -var-file=variables.pkrvars.hcl ubuntu-24.04-libvirt.pkr.hcl

      - name: Cache Packer build dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/packer
            ~/packer_cache
          key: packer-${{ matrix.arch }}-${{ hashFiles('packer/**') }}
          restore-keys: |
            packer-${{ matrix.arch }}-

      - name: Build Vagrant box with Packer
        working-directory: packer
        timeout-minutes: 60
        run: |
          # Set up environment
          export PACKER_CACHE_DIR=~/packer_cache
          export LIBVIRT_DEFAULT_URI=qemu:///system

          # Create output directory
          mkdir -p output

          # Build the box
          packer build \
            -var-file=variables.pkrvars.hcl \
            -var="output_directory=output" \
            ubuntu-24.04-libvirt.pkr.hcl

      - name: Validate box structure
        working-directory: packer
        run: |
          # Check if box was created
          if [ ! -f output/ubuntu-24.04-dev-libvirt.box ]; then
            echo "Error: Box file not found!"
            exit 1
          fi

          # Check box size (should be reasonable)
          BOX_SIZE=$(stat -c%s output/ubuntu-24.04-dev-libvirt.box)
          echo "Box size: $((BOX_SIZE / 1024 / 1024)) MB"

          if [ $BOX_SIZE -lt 100000000 ]; then  # Less than 100MB
            echo "Warning: Box seems too small"
          fi

          if [ $BOX_SIZE -gt 5000000000 ]; then  # More than 5GB
            echo "Warning: Box seems too large"
          fi

      - name: Test box with Vagrant
        timeout-minutes: 20
        run: |
          # Add the box to Vagrant
          vagrant box add ubuntu-2404-dev packer/output/ubuntu-24.04-dev-libvirt.box --force

          # Create test directory
          mkdir -p test-vm
          cd test-vm

          # Create minimal Vagrantfile for testing
          cat > Vagrantfile << 'EOF'
          Vagrant.configure("2") do |config|
            config.vm.box = "ubuntu-2404-dev"
            config.vm.provider :libvirt do |libvirt|
              libvirt.memory = 1024
              libvirt.cpus = 1
              libvirt.driver = "qemu"
            end
            config.vm.provision "shell", inline: "echo 'Box test successful'"
          end
          EOF

          # Test the box
          export LIBVIRT_DEFAULT_URI=qemu:///system
          timeout 600 vagrant up --provider=libvirt
          vagrant ssh -c "echo 'SSH test successful'"
          vagrant ssh -c "which claude || echo 'Claude CLI not found'"
          vagrant ssh -c "which gh || echo 'GitHub CLI not found'"
          vagrant destroy -f

      - name: Generate box metadata
        if: github.event_name == 'release' || github.event.inputs.upload_box == 'true'
        working-directory: packer
        run: |
          BOX_FILE="output/ubuntu-24.04-dev-libvirt.box"
          BOX_SIZE=$(stat -c%s "$BOX_FILE")
          BOX_SHA256=$(sha256sum "$BOX_FILE" | cut -d' ' -f1)

          cat > output/metadata.json << EOF
          {
            "name": "dev-box/ubuntu-24.04-libvirt",
            "description": "Ubuntu 24.04 LTS development environment optimized for libvirt/KVM",
            "versions": [
              {
                "version": "${GITHUB_REF#refs/tags/}",
                "status": "active",
                "description_html": "Production-ready Ubuntu 24.04 development box with modern toolchain",
                "providers": [
                  {
                    "name": "libvirt",
                    "url": "https://github.com/williamzujkowski/dev-box/releases/download/${GITHUB_REF#refs/tags/}/ubuntu-24.04-dev-libvirt.box",
                    "checksum_type": "sha256",
                    "checksum": "$BOX_SHA256"
                  }
                ]
              }
            ]
          }
          EOF

      - name: Upload box artifacts
        if: github.event_name == 'release' || github.event.inputs.upload_box == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: vagrant-box-${{ matrix.arch }}
          path: |
            packer/output/ubuntu-24.04-dev-libvirt.box
            packer/output/metadata.json
          retention-days: 30

      - name: Upload to release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v1
        with:
          files: |
            packer/output/ubuntu-24.04-dev-libvirt.box
            packer/output/metadata.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup
        if: always()
        run: |
          # Clean up test VMs
          cd test-vm 2>/dev/null && vagrant destroy -f 2>/dev/null || true

          # Remove box
          vagrant box remove ubuntu-2404-dev --force 2>/dev/null || true

          # Clean libvirt networks
          sudo virsh net-list --all | grep vagrant-libvirt && sudo virsh net-destroy vagrant-libvirt || true

  test-existing-vagrantfile:
    runs-on: ubuntu-24.04
    needs: build-libvirt-box
    if: github.event_name != 'release'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup libvirt for testing
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-kvm libvirt-daemon-system
          sudo systemctl start libvirtd
          sudo usermod -a -G libvirt $USER

      - name: Install Vagrant and plugins
        run: |
          curl -fsSL https://releases.hashicorp.com/vagrant/2.4.1/vagrant_2.4.1-1_amd64.deb -o vagrant.deb
          sudo dpkg -i vagrant.deb
          sudo apt-get install -y ruby-dev libvirt-dev
          vagrant plugin install vagrant-libvirt

      - name: Download box artifact
        uses: actions/download-artifact@v4
        with:
          name: vagrant-box-amd64
          path: ./box-artifact/

      - name: Test main Vagrantfile
        run: |
          # Clean any stale state
          rm -rf .vagrant/

          # Add the built box
          vagrant box add local/ubuntu-24.04-libvirt ./box-artifact/ubuntu-24.04-dev-libvirt.box --force

          # Validate Vagrantfile syntax
          vagrant validate

          # Test with explicit provider
          export VAGRANT_DEFAULT_PROVIDER=libvirt
          vagrant status

          echo "âœ… Vagrantfile validation passed"
          echo "ðŸ“¦ Box integration test completed"
